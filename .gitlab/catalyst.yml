# Catalyst Templates

# The RUN_CATALYST variable can be toggled in the Gitlab interface to
# toggle whether jobs should be run on this system.
.catalyst-template:
  extends: .base-template
  rules:
    - if: '$RUN_CATALYST != "ON"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - when: on_success

.catalyst-scheduled-template:
  extends: .base-template
  rules:
    - if: '$RUN_CATALYST != "ON"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'

.catalyst-shell-template:
  extends: .catalyst-template
  tags:
    - catalyst
    - shell

.catalyst-batch-template:
  extends: .catalyst-template
  tags:
    - catalyst
    - batch

.catalyst-scheduled-shell-template:
  extends: .catalyst-scheduled-template
  tags:
    - catalyst
    - shell

.catalyst-scheduled-batch-template:
  extends: .catalyst-scheduled-template
  tags:
    - catalyst
    - batch

##### All Catalyst Jobs #####

### gcc@4.9.3 ###
.catalyst-gcc-4_9_3-template:
  variables:
    COMPILER: gcc/4.9.3
    CC_COMMAND: "which gcc"
    FC_COMMAND: "which gfortran"
    SPACK_ENV_NAME: "unifyfs-slurm-gcc4_9_3"

catalyst-gcc-4_9_3-install-deps:
  extends: [.catalyst-shell-template, .catalyst-gcc-4_9_3-template, .install-deps-template]

catalyst-gcc-4_9_3-build:
  extends: [.catalyst-shell-template, .catalyst-gcc-4_9_3-template, .build-template]
  needs: ["catalyst-gcc-4_9_3-install-deps"]

catalyst-gcc-4_9_3-unit-test:
  extends: [.slurm-single-node-template, .catalyst-batch-template, .catalyst-gcc-4_9_3-template, .unit-test-template]
  needs: ["catalyst-gcc-4_9_3-build"]

# Integration tests

catalyst-gcc-4_9_3-integ-test-writeread-posix:
  variables:
    CI_TEST_OPTIONS: ":: -s writeread -t posix"
  extends: [.slurm-multi-node-template, .catalyst-batch-template, .catalyst-gcc-4_9_3-template, .integ-test-template]
  needs: ["catalyst-gcc-4_9_3-build"]

catalyst-gcc-4_9_3-integ-test-writeread-mpiio:
  variables:
    CI_TEST_OPTIONS: ":: -s writeread -t mpiio"
  extends: [.slurm-multi-node-template, .catalyst-batch-template, .catalyst-gcc-4_9_3-template, .integ-test-template]
  needs: ["catalyst-gcc-4_9_3-build"]

catalyst-gcc-4_9_3-integ-test-read-posix:
  variables:
    CI_TEST_OPTIONS: ":: -s read -t posix"
  extends: [.slurm-multi-node-template, .catalyst-batch-template, .catalyst-gcc-4_9_3-template, .integ-test-template]
  needs: ["catalyst-gcc-4_9_3-build"]

catalyst-gcc-4_9_3-integ-test-read-mpiio:
  variables:
    CI_TEST_OPTIONS: ":: -s read -t mpiio"
  extends: [.slurm-multi-node-template, .catalyst-batch-template, .catalyst-gcc-4_9_3-template, .integ-test-template]
  needs: ["catalyst-gcc-4_9_3-build"]

catalyst-gcc-4_9_3-integ-test-pc-all:
  variables:
    CI_TEST_OPTIONS: ":: -s pc -t all"
  extends: [.slurm-multi-node-template, .catalyst-batch-template, .catalyst-gcc-4_9_3-template, .integ-test-template]
  needs: ["catalyst-gcc-4_9_3-build"]

catalyst-gcc-4_9_3-integ-test-stage:
  variables:
    CI_TEST_OPTIONS: ":: -s stage"
  extends: [.slurm-multi-node-template, .catalyst-batch-template, .catalyst-gcc-4_9_3-template, .integ-test-template]
  needs: ["catalyst-gcc-4_9_3-build"]


### gcc@10.2.1 ###
.catalyst-gcc-10_2_1-template:
  variables:
    COMPILER: gcc/10.2.1
    CC_COMMAND: "which gcc"
    FC_COMMAND: "which gfortran"
    SPACK_ENV_NAME: "unifyfs-slurm-gcc10_2_1"

catalyst-gcc-10_2_1-install-deps:
  extends: [.catalyst-shell-template, .catalyst-gcc-10_2_1-template, .install-deps-template]

catalyst-gcc-10_2_1-build:
  extends: [.catalyst-shell-template, .catalyst-gcc-10_2_1-template, .build-template]
  needs: ["catalyst-gcc-10_2_1-install-deps"]

catalyst-gcc-10_2_1-unit-test:
  extends: [.slurm-single-node-template, .catalyst-batch-template, .catalyst-gcc-10_2_1-template, .unit-test-template]
  needs: ["catalyst-gcc-10_2_1-build"]

# Integration tests

catalyst-gcc-10_2_1-integ-test-writeread-posix:
  variables:
    CI_TEST_OPTIONS: ":: -s writeread -t posix"
  extends: [.slurm-multi-node-template, .catalyst-batch-template, .catalyst-gcc-10_2_1-template, .integ-test-template]
  needs: ["catalyst-gcc-10_2_1-build"]

catalyst-gcc-10_2_1-integ-test-writeread-mpiio:
  variables:
    CI_TEST_OPTIONS: ":: -s writeread -t mpiio"
  extends: [.slurm-multi-node-template, .catalyst-batch-template, .catalyst-gcc-10_2_1-template, .integ-test-template]
  needs: ["catalyst-gcc-10_2_1-build"]

catalyst-gcc-10_2_1-integ-test-read-posix:
  variables:
    CI_TEST_OPTIONS: ":: -s read -t posix"
  extends: [.slurm-multi-node-template, .catalyst-batch-template, .catalyst-gcc-10_2_1-template, .integ-test-template]
  needs: ["catalyst-gcc-10_2_1-build"]

catalyst-gcc-10_2_1-integ-test-read-mpiio:
  variables:
    CI_TEST_OPTIONS: ":: -s read -t mpiio"
  extends: [.slurm-multi-node-template, .catalyst-batch-template, .catalyst-gcc-10_2_1-template, .integ-test-template]
  needs: ["catalyst-gcc-10_2_1-build"]

catalyst-gcc-10_2_1-integ-test-pc-all:
  variables:
    CI_TEST_OPTIONS: ":: -s pc -t all"
  extends: [.slurm-multi-node-template, .catalyst-batch-template, .catalyst-gcc-10_2_1-template, .integ-test-template]
  needs: ["catalyst-gcc-10_2_1-build"]

catalyst-gcc-10_2_1-integ-test-stage:
  variables:
    CI_TEST_OPTIONS: ":: -s stage"
  extends: [.slurm-multi-node-template, .catalyst-batch-template, .catalyst-gcc-10_2_1-template, .integ-test-template]
  needs: ["catalyst-gcc-10_2_1-build"]

# Larger Scheduled Stage Job(s)

catalyst-gcc-10_2_1-scheduled-install-deps:
  extends: [.catalyst-scheduled-shell-template, .catalyst-gcc-10_2_1-template, .install-deps-template]

catalyst-gcc-10_2_1-scheduled-build:
  extends: [.catalyst-scheduled-shell-template, .catalyst-gcc-10_2_1-template, .build-template]
  needs: ["catalyst-gcc-10_2_1-scheduled-install-deps"]

catalyst-gcc-10_2_1-integ-test-scheduled-stage:
  variables:
    CI_TEST_OPTIONS: ":: -s stage"
  extends: [.slurm-multi-node-template, .catalyst-scheduled-batch-template, .catalyst-gcc-10_2_1-template, .integ-test-template]
  needs: ["catalyst-gcc-10_2_1-scheduled-build"]
