language: c
dist: bionic
os: linux

addons:
  apt:
    packages: &native_deps
    - autoconf
    - autoconf-archive
    - automake
    - build-essential
    - cmake
    - diffutils
    - gfortran
    - libhdf5-openmpi-dev
    - libopenmpi-dev
    - libtool-bin
    - m4
    - openmpi-bin
    - pkg-config

jobs:
  include:
  - name: "Checkpatch"
    before_install: skip
    install: skip
    before_script:
      - eval $(./scripts/git_log_test_env.sh)
      - export TEST_CHECKPATCH_SKIP_FILES
    script: ./scripts/checkpatch.sh || test "$TEST_CHECKPATCH_ALLOW_FAILURE" = yes

  - name: "GCC 4.9"
    dist: xenial
    addons:
      apt:
        update: true
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - *native_deps
        - g++-4.9
    env:
      - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"

  - name: "GCC 7.5"
    addons:
      apt:
        update: true
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - *native_deps
        - g++-7
    env:
      - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

  - name: "GCC 9.3"
    addons:
      apt:
        update: true
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - *native_deps
        - g++-9
    env:
      - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"

  - name: "GCC 10.1"
    addons:
      apt:
        update: true
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - *native_deps
        - g++-10
    env:
      - MATRIX_EVAL="CC=gcc-10 && CXX=g++-10"

before_install:
  - eval "${MATRIX_EVAL}"
  - echo kernel.yama.ptrace_scope=0 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
  - (cd $HOME/spack; git describe) || git clone https://github.com/spack/spack $HOME/spack
  # Create packages.yaml to prevent building dependencies that time out
  - |
    test -f $HOME/spack/etc/spack/packages.yaml || cat > $HOME/spack/etc/spack/packages.yaml << '  EOF'
    packages:
      all:
        target: [x86_64]
        providers:
            mpi: [openmpi]
      autoconf:
        buildable: False
        externals:
        - spec: "autoconf@2.69"
          prefix: /usr
      automake:
        buildable: False
        externals:
        - spec: "automake@1.15.1"
          prefix: /usr
      cmake:
        buildable: False
        externals:
        - spec: "cmake@3.12.4"
          prefix: /usr/local/cmake-3.12.4
      libtool:
        buildable: False
        externals:
        - spec: "libtool@2.4.6"
          prefix: /usr
      m4:
        buildable: False
        externals:
        - spec: "m4@1.4.18"
          prefix: /usr
      openmpi:
        buildable: False
        externals:
        - spec: "openmpi@2.1.1"
          prefix: /usr
      pkg-config:
        buildable: False
        externals:
        - spec: "pkg-config@0.29.1"
          prefix: /usr
    EOF

install:
  - . $HOME/spack/share/spack/setup-env.sh
  - spack install gotcha@1.0.3 && spack load gotcha@1.0.3
  - spack install mochi-margo ^mercury~boostsys ^libfabric fabrics=rxm,sockets,tcp && spack load argobots && spack load mercury && spack load mochi-margo
  - spack install spath~mpi && spack load spath
  # prepare build environment
  - GOTCHA_INSTALL=$(spack location -i gotcha)
  - SPATH_INSTALL=$(spack location -i spath)

script:
  - export DISTCHECK_CONFIGURE_FLAGS="CC=$CC --with-gotcha=$GOTCHA_INSTALL --with-spath=$SPATH_INSTALL --enable-fortran"
  - ./autogen.sh
  - ./configure $DISTCHECK_CONFIGURE_FLAGS
  - make distcheck V=1

cache:
  directories:
    - $HOME/spack

# Don't update the cache just because the spack lock file changed
before_cache:
  - rm -f $HOME/spack/opt/spack/.spack-db/prefix_lock

after_failure:
  - find . -type f -name "config.log" -execdir cat {} \;
  - find . -type f -name "test-suite.log" -execdir cat {} \;
